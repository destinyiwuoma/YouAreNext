// moment.js language configuration
// language : Georgian (ka)
// author : Irakli Janiashvili : https://github.com/irakli-janiashvili

var moment = require("../../moment");

exports["lang:ka"] = {
    setUp : function (cb) {
        moment.lang('ka');
        cb();
    },

    tearDown : function (cb) {
        moment.lang('ka');
        cb();
    },

    "parse" : function(test) {
        test.expect(96);

        var i,
            tests = 'იანვარი იან_თებერვალი თებ_მარტი მარ_აპრილი აპრ_მაისი მაი_ივნისი ივნ_ივლისი ივლ_აგვისტო აგვ_სექტემბერი სექ_ოქტომბერი ოქტ_ნოემბერი ნოე_დეკემბერი დეკ'.split("_");

        function equalTest(input, mmm, i) {
            test.equal(moment(input, mmm).month(), i, input + ' უნდა იყოს თვე ' + (i + 1));
        }

        for (i = 0; i < 12; i++) {
            tests[i] = tests[i].split(' ');
            equalTest(tests[i][0], 'MMM', i);
            equalTest(tests[i][1], 'MMM', i);
            equalTest(tests[i][0], 'MMMM', i);
            equalTest(tests[i][1], 'MMMM', i);
            equalTest(tests[i][0].toLocaleLowerCase(), 'MMMM', i);
            equalTest(tests[i][1].toLocaleLowerCase(), 'MMMM', i);
            equalTest(tests[i][0].toLocaleUpperCase(), 'MMMM', i);
            equalTest(tests[i][1].toLocaleUpperCase(), 'MMMM', i);
        }

        test.done();
    },

    "format" : function(test) {
        test.expect(22);

        var a = [
                ['dddd, MMMM Do YYYY, h:mm:ss a', 'კვირა, თებერვალი მე-14 2010, 3:25:50 pm'],
                ['ddd, hA',                       'კვი, 3PM'],
                ['M Mo MM MMMM MMM',              '2 მე-2 02 თებერვალი თებ'],
                ['YYYY YY',                       '2010 10'],
                ['D Do DD',                       '14 მე-14 14'],
                ['d do dddd ddd dd',              '0 0 კვირა კვი კვ'],
                ['DDD DDDo DDDD',                 '45 45-ე 045'],
                ['w wo ww',                       '7 მე-7 07'],
                ['h hh',                          '3 03'],
                ['H HH',                          '15 15'],
                ['m mm',                          '25 25'],
                ['s ss',                          '50 50'],
                ['a A',                           'pm PM'],
                ['წლის DDDo დღე',                 'წლის 45-ე დღე'],
                ['L',                             '14/02/2010'],
                ['LL',                            '14 თებერვალი 2010'],
                ['LLL',                           '14 თებერვალი 2010 3:25 PM'],
                ['LLLL',                          'კვირა, 14 თებერვალი 2010 3:25 PM'],
                ['l',                             '14/2/2010'],
                ['ll',                            '14 თებ 2010'],
                ['lll',                           '14 თებ 2010 3:25 PM'],
                ['llll',                          'კვი, 14 თებ 2010 3:25 PM']
            ],
            b = moment(new Date(2010, 1, 14, 15, 25, 50, 125)),
            i;

        for (i = 0; i < a.length; i++) {
            test.equal(b.format(a[i][0]), a[i][1], a[i][0] + ' ---> ' + a[i][1]);
        }

        test.done();
    },

    "format ordinal" : function(test) {
        test.expect(35);

        test.equal(moment([2011, 0, 1]).format('DDDo'),  '1-ლი',  '1-ლი');
        test.equal(moment([2011, 0, 2]).format('DDDo'),  'მე-2',  'მე-2');
        test.equal(moment([2011, 0, 3]).format('DDDo'),  'მე-3',  'მე-3');
        test.equal(moment([2011, 0, 4]).format('DDDo'),  'მე-4',  'მე-4');
        test.equal(moment([2011, 0, 