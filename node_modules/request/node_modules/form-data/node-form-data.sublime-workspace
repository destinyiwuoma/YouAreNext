{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"back",
				"background-clip"
			],
			[
				"di",
				"display"
			],
			[
				"background-",
				"background-position"
			],
			[
				"de",
				"defaults"
			],
			[
				"no",
				"normal"
			],
			[
				"line",
				"line-height"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/integration/test-pipe.js",
			"settings":
			{
				"buffer_size": 3625,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 673,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/form_data.js",
			"settings":
			{
				"buffer_size": 7510,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*!\n * jQuery JavaScript Library v1.8.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2012 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: Tue Nov 13 2012 08:20:33 GMT-0500 (Eastern Standard Time)\n */\n(function( window, undefined ) {\nvar\n  // A central reference to the root jQuery(document)\n  rootjQuery,\n\n  // The deferred used on DOM ready\n  readyList,\n\n  // Use the correct document accordingly with window argument (sandbox)\n  document = window.document,\n  location = window.location,\n  navigator = window.navigator,\n\n  // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n\n  // Map over the $ in case of overwrite\n  _$ = window.$,\n\n  // Save a reference to some core methods\n  core_push = Array.prototype.push,\n  core_slice = Array.prototype.slice,\n  core_indexOf = Array.prototype.indexOf,\n  core_toString = Object.prototype.toString,\n  core_hasOwn = Object.prototype.hasOwnProperty,\n  core_trim = String.prototype.trim,\n\n  // Define a local copy of jQuery\n  jQuery = function( selector, context ) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    return new jQuery.fn.init( selector, context, rootjQuery );\n  },\n\n  // Used for matching numbers\n  core_pnum = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,\n\n  // Used for detecting and trimming whitespace\n  core_rnotwhite = /\\S/,\n  core_rspace = /\\s+/,\n\n  // Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)\n  rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n  // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n  // Match a standalone tag\n  rsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n  // JSON RegExp\n  rvalidchars = /^[\\],:{}\\s]*$/,\n  rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n  rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\n  rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,\n\n  // Matches dashed string for camelizing\n  rmsPrefix = /^-ms-/,\n  rdashAlpha = /-([\\da-z])/gi,\n\n  // Used by jQuery.camelCase as callback to replace()\n  fcamelCase = function( all, letter ) {\n    return ( letter + \"\" ).toUpperCase();\n  },\n\n  // The ready event handler and self cleanup method\n  DOMContentLoaded = function() {\n    if ( document.addEventListener ) {\n      document.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n      jQuery.ready();\n    } else if ( document.readyState === \"complete\" ) {\n      // we're here because readyState === \"complete\" in oldIE\n      // which is good enough for us to call the dom ready!\n      document.detachEvent( \"onreadystatechange\", DOMContentLoaded );\n      jQuery.ready();\n    }\n  },\n\n  // [[Class]] -> type pairs\n  class2type = {};\n\njQuery.fn = jQuery.prototype = {\n  constructor: jQuery,\n  init: function( selector, context, rootjQuery ) {\n    var match, elem, ret, doc;\n\n    // Handle $(\"\"), $(null), $(undefined), $(false)\n    if ( !selector ) {\n      return this;\n    }\n\n    // Handle $(DOMElement)\n    if ( selector.nodeType ) {\n      this.context = this[0] = selector;\n      this.length